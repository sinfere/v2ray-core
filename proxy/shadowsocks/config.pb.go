package shadowsocks

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import v2ray_core_common_protocol "v2ray.com/core/common/protocol"
import v2ray_core_common_protocol1 "v2ray.com/core/common/protocol"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CipherType int32

const (
	CipherType_UNKNOWN       CipherType = 0
	CipherType_AES_128_CFB   CipherType = 1
	CipherType_AES_256_CFB   CipherType = 2
	CipherType_CHACHA20      CipherType = 3
	CipherType_CHACHA20_IETF CipherType = 4
)

var CipherType_name = map[int32]string{
	0: "UNKNOWN",
	1: "AES_128_CFB",
	2: "AES_256_CFB",
	3: "CHACHA20",
	4: "CHACHA20_IETF",
}
var CipherType_value = map[string]int32{
	"UNKNOWN":       0,
	"AES_128_CFB":   1,
	"AES_256_CFB":   2,
	"CHACHA20":      3,
	"CHACHA20_IETF": 4,
}

func (x CipherType) String() string {
	return proto.EnumName(CipherType_name, int32(x))
}
func (CipherType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Account_OneTimeAuth int32

const (
	Account_Auto     Account_OneTimeAuth = 0
	Account_Disabled Account_OneTimeAuth = 1
	Account_Enabled  Account_OneTimeAuth = 2
)

var Account_OneTimeAuth_name = map[int32]string{
	0: "Auto",
	1: "Disabled",
	2: "Enabled",
}
var Account_OneTimeAuth_value = map[string]int32{
	"Auto":     0,
	"Disabled": 1,
	"Enabled":  2,
}

func (x Account_OneTimeAuth) String() string {
	return proto.EnumName(Account_OneTimeAuth_name, int32(x))
}
func (Account_OneTimeAuth) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Account struct {
	Password   string              `protobuf:"bytes,1,opt,name=password" json:"password,omitempty"`
	CipherType CipherType          `protobuf:"varint,2,opt,name=cipher_type,json=cipherType,enum=v2ray.core.proxy.shadowsocks.CipherType" json:"cipher_type,omitempty"`
	Ota        Account_OneTimeAuth `protobuf:"varint,3,opt,name=ota,enum=v2ray.core.proxy.shadowsocks.Account_OneTimeAuth" json:"ota,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Account) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Account) GetCipherType() CipherType {
	if m != nil {
		return m.CipherType
	}
	return CipherType_UNKNOWN
}

func (m *Account) GetOta() Account_OneTimeAuth {
	if m != nil {
		return m.Ota
	}
	return Account_Auto
}

type ServerConfig struct {
	UdpEnabled bool                             `protobuf:"varint,1,opt,name=udp_enabled,json=udpEnabled" json:"udp_enabled,omitempty"`
	User       *v2ray_core_common_protocol.User `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
}

func (m *ServerConfig) Reset()                    { *m = ServerConfig{} }
func (m *ServerConfig) String() string            { return proto.CompactTextString(m) }
func (*ServerConfig) ProtoMessage()               {}
func (*ServerConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ServerConfig) GetUdpEnabled() bool {
	if m != nil {
		return m.UdpEnabled
	}
	return false
}

func (m *ServerConfig) GetUser() *v2ray_core_common_protocol.User {
	if m != nil {
		return m.User
	}
	return nil
}

type ClientConfig struct {
	Server []*v2ray_core_common_protocol1.ServerEndpoint `protobuf:"bytes,1,rep,name=server" json:"server,omitempty"`
}

func (m *ClientConfig) Reset()                    { *m = ClientConfig{} }
func (m *ClientConfig) String() string            { return proto.CompactTextString(m) }
func (*ClientConfig) ProtoMessage()               {}
func (*ClientConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ClientConfig) GetServer() []*v2ray_core_common_protocol1.ServerEndpoint {
	if m != nil {
		return m.Server
	}
	return nil
}

func init() {
	proto.RegisterType((*Account)(nil), "v2ray.core.proxy.shadowsocks.Account")
	proto.RegisterType((*ServerConfig)(nil), "v2ray.core.proxy.shadowsocks.ServerConfig")
	proto.RegisterType((*ClientConfig)(nil), "v2ray.core.proxy.shadowsocks.ClientConfig")
	proto.RegisterEnum("v2ray.core.proxy.shadowsocks.CipherType", CipherType_name, CipherType_value)
	proto.RegisterEnum("v2ray.core.proxy.shadowsocks.Account_OneTimeAuth", Account_OneTimeAuth_name, Account_OneTimeAuth_value)
}

func init() { proto.RegisterFile("v2ray.com/core/proxy/shadowsocks/config.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 442 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x91, 0x4f, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0xeb, 0x24, 0x6a, 0xc3, 0x38, 0x80, 0xd9, 0x53, 0x14, 0x55, 0xc2, 0xca, 0x29, 0x54,
	0x62, 0xdd, 0x2e, 0x7f, 0xc4, 0xd5, 0x31, 0xa9, 0x5a, 0x21, 0xa5, 0x91, 0x93, 0x82, 0x84, 0x90,
	0x2c, 0x77, 0xbd, 0x10, 0x8b, 0xd8, 0xb3, 0xda, 0xb5, 0x5b, 0xfc, 0x95, 0xf8, 0x66, 0x7c, 0x0b,
	0xe4, 0x75, 0xd2, 0x44, 0x1c, 0xcc, 0xcd, 0x33, 0x7e, 0xef, 0x79, 0xde, 0xcf, 0xf0, 0xfa, 0x9e,
	0xa9, 0xb8, 0xa2, 0x1c, 0x33, 0x8f, 0xa3, 0x12, 0x9e, 0x54, 0xf8, 0xab, 0xf2, 0xf4, 0x3a, 0x4e,
	0xf0, 0x41, 0x23, 0xff, 0xa9, 0x3d, 0x8e, 0xf9, 0xf7, 0xf4, 0x07, 0x95, 0x0a, 0x0b, 0x24, 0xa7,
	0x3b, 0xb9, 0x12, 0xd4, 0x48, 0xe9, 0x81, 0x74, 0xf4, 0xea, 0x9f, 0x30, 0x8e, 0x59, 0x86, 0xb9,
	0x67, 0xac, 0x1c, 0x37, 0x5e, 0xa9, 0x85, 0x6a, 0x82, 0x46, 0xe7, 0xff, 0x91, 0x6a, 0xa1, 0xee,
	0x85, 0x8a, 0xb4, 0x14, 0xbc, 0x71, 0x8c, 0xff, 0x58, 0x70, 0xe2, 0x73, 0x8e, 0x65, 0x5e, 0x90,
	0x11, 0xf4, 0x65, 0xac, 0xf5, 0x03, 0xaa, 0x64, 0x68, 0xb9, 0xd6, 0xe4, 0x49, 0xf8, 0x38, 0x93,
	0x6b, 0xb0, 0x79, 0x2a, 0xd7, 0x42, 0x45, 0x45, 0x25, 0xc5, 0xb0, 0xe3, 0x5a, 0x93, 0x67, 0x6c,
	0x42, 0xdb, 0x0e, 0xa7, 0x81, 0x31, 0xac, 0x2a, 0x29, 0x42, 0xe0, 0x8f, 0xcf, 0x24, 0x80, 0x2e,
	0x16, 0xf1, 0xb0, 0x6b, 0x22, 0x2e, 0xda, 0x23, 0xb6, 0xa7, 0xd1, 0x9b, 0x5c, 0xac, 0xd2, 0x4c,
	0xf8, 0x65, 0xb1, 0x0e, 0x6b, 0xf7, 0x98, 0x81, 0x7d, 0xb0, 0x23, 0x7d, 0xe8, 0xf9, 0x65, 0x81,
	0xce, 0x11, 0x19, 0x40, 0xff, 0x63, 0xaa, 0xe3, 0xbb, 0x8d, 0x48, 0x1c, 0x8b, 0xd8, 0x70, 0x32,
	0xcb, 0x9b, 0xa1, 0x33, 0x16, 0x30, 0x58, 0x1a, 0x00, 0x81, 0x81, 0x4f, 0x5e, 0x82, 0x5d, 0x26,
	0x32, 0x12, 0x8d, 0xc0, 0x54, 0xee, 0x87, 0x50, 0x26, 0x72, 0x6b, 0x21, 0x6f, 0xa1, 0x57, 0xc3,
	0x35, 0x6d, 0x6d, 0xe6, 0x1e, 0x9e, 0xda, 0x90, 0xa5, 0x3b, 0xb2, 0xf4, 0x56, 0x0b, 0x15, 0x1a,
	0xf5, 0x38, 0x84, 0x41, 0xb0, 0x49, 0x45, 0x5e, 0x6c, 0x3f, 0x33, 0x85, 0xe3, 0x86, 0xfb, 0xd0,
	0x72, 0xbb, 0x13, 0x9b, 0x9d, 0xb5, 0xe5, 0x34, 0x07, 0xce, 0xf2, 0x44, 0x62, 0x9a, 0x17, 0xe1,
	0xd6, 0x79, 0xf6, 0x0d, 0x60, 0x4f, 0xb3, 0x6e, 0x75, 0x3b, 0xff, 0x34, 0xbf, 0xf9, 0x32, 0x77,
	0x8e, 0xc8, 0x73, 0xb0, 0xfd, 0xd9, 0x32, 0xba, 0x60, 0x1f, 0xa2, 0xe0, 0x72, 0xea, 0x58, 0xbb,
	0x05, 0x7b, 0xf7, 0xde, 0x2c, 0x3a, 0x35, 0x92, 0xe0, 0xca, 0x0f, 0xae, 0x7c, 0x76, 0xee, 0x74,
	0xc9, 0x0b, 0x78, 0xba, 0x9b, 0xa2, 0xeb, 0xd9, 0xea, 0xd2, 0xe9, 0x4d, 0x17, 0xe0, 0x72, 0xcc,
	0x5a, 0xff, 0xc4, 0xc2, 0xfa, 0x6a, 0x1f, 0x8c, 0xbf, 0x3b, 0xa7, 0x9f, 0x59, 0x18, 0x57, 0x34,
	0xa8, 0xd5, 0x0b, 0xa3, 0x5e, 0xee, 0x5f, 0xdf, 0x1d, 0x9b, 0x42, 0x6f, 0xfe, 0x06, 0x00, 0x00,
	0xff, 0xff, 0x2b, 0x46, 0x7c, 0x1c, 0x09, 0x03, 0x00, 0x00,
}
